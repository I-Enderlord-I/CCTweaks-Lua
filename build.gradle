plugins {
	id "com.jfrog.bintray" version "1.4"
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

group 'org.squiddev'
version '1.5.0-nightly-build0'

targetCompatibility = sourceCompatibility = 1.6
compileTestJava.sourceCompatibility = compileTestJava.targetCompatibility = 1.8

repositories {
	mavenCentral()

	maven { url = "https://crzd.me/files/maven/" }

	maven {
		name = "squiddev"
		url = "https://dl.bintray.com/squiddev/maven"
	}

	maven {
		name = "forge"
		url = "http://files.minecraftforge.net/maven"
	}
}

configurations {
	shade
	patch
	provided
	compile.extendsFrom shade
}

dependencies {
	provided "com.google.code.findbugs:jsr305:3.0.2"

	provided "dan200.computercraft:ComputerCraft:1.80pr0-build0"
	compile 'com.google.guava:guava:19.0'
	shade "org.ow2.asm:asm-debug-all:5.0.4"

	shade 'org.squiddev:Patcher:1.2.4'
	shade 'org.squiddev:Cobalt:0.2.4'

	shade 'io.netty:netty-all:4.0.23.Final'

	patch('org.squiddev:luaj.luajc:1.0.9') {
		// We provide a custom LuaJ source with ComputerCraft
		exclude group: 'org.luaj'
	}

	provided 'org.squiddev:ConfigGen:1.2.5'

	testCompile 'junit:junit:4.11'
	testCompile 'org.apache.logging.log4j:log4j-core:2.8.2'
	testRuntime "org.apache.commons:commons-lang3:3.5"
}

sourceSets.main.compileClasspath += configurations.provided
sourceSets.test.compileClasspath += configurations.provided
idea { module { scopes.PROVIDED.plus += [configurations.provided] } }

def versions = [
	('1.80pr0-nightly-build0'): 'http://crzd.me/files/maven/dan200/computercraft/ComputerCraft/1.80pr0-build0/ComputerCraft-1.80pr0-build0.jar',
]

task getVersions(type: Task) {
	versions.each { key, value ->
		def f = file('lib/ComputerCraft-' + key + '.jar')
		if (!f.exists()) {
			f.parentFile.mkdirs();

			def connection = new URL(value).openConnection();
			connection.setRequestProperty("User-Agent", "CCTweaks file downloader");
			connection.connect();

			def i = connection.getInputStream();
			f.withOutputStream { it << i }
			i.close()
		}
	}
}

compileTestJava.dependsOn getVersions

jar {
	// Package all luaj patches in luaj.luajc
	from(configurations.patch.collect { (it.isDirectory() ? it : zipTree(it)) })
		{
			include "org/luaj/**"
			include "org/squiddev/luaj/luajc/IGetPrototype.class"
		}

	// Package the patch files into a patch/ folder
	filesMatching("org/luaj/**", {
		it.path = "patch/" + it.path
	})
}
// Build a non-obfuscated jar
task combineJar(type: Jar) {
	from sourceSets.main.output

	// Package all the org.squiddev dependencies into one file
	from configurations.shade
		.collect { it.isDirectory() ? it : zipTree(it) }

	// Package all luaj patches in luaj.luajc.
	from(configurations.patch.collect { (it.isDirectory() ? it : zipTree(it)) })
		{
			include "org/luaj/**"
			include "org/squiddev/luaj/luajc/IGetPrototype.class"
		}

	// Package the patch files into a patch/ folder
	filesMatching("org/luaj/**", {
		it.path = "patch/" + it.path
	})

	classifier = 'complete'
}

assemble.dependsOn += combineJar

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	publications = ['mavenJava']
	publish = true
	pkg {
		repo = 'maven'
		name = 'cctweaks-lua'
		licenses = ['MIT']
		vcsUrl = 'https://github.com/SquidDev-CC/CCTweaks-Lua'

		version {
			name = project.version
			desc = 'Standalone modifications to ComputerCraft'
			released = new Date()
		}
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourcesJar
		}
	}
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint" << "-Xlint:-processing"
	}

	tasks.withType(Jar) {
		exclude "**/*.java"
	}
}

test {
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
	}
}
