plugins {
	id "com.jfrog.bintray" version "1.4"
}
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

group 'org.squiddev'
version '1.3.1'

sourceCompatibility = 1.6

repositories {
	mavenCentral()

	ivy {
		name = "ComputerCraft"
		artifactPattern "http://addons-origin.cursecdn.com/files/2291/384/[module][revision](.[ext])"
	}

	maven {
		name = "squiddev"
		url = "https://dl.bintray.com/squiddev/maven"
	}

	maven {
		name = "forge"
		url = "http://files.minecraftforge.net/maven"
	}
}

configurations {
	shade
	patch
	provided
	compile.extendsFrom shade
}

dependencies {
	provided "ComputerCraft:ComputerCraft:1.79"
	compile 'com.google.guava:guava:19.0'
	shade "org.ow2.asm:asm-debug-all:5.0.4"

	shade 'org.squiddev:Patcher:1.2.3'
	shade 'org.squiddev:Cobalt:0.2.1' // Remember to bump this in CobaltMachine too

	patch('org.squiddev:luaj.luajc:1.0.9') {
		// We provide a custom LuaJ source with ComputerCraft
		exclude group: 'org.luaj'
	}

	provided 'org.squiddev:ConfigGen:1.2.5'

	testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets.main.compileClasspath += configurations.provided
sourceSets.test.compileClasspath += configurations.provided
idea { module { scopes.PROVIDED.plus += [configurations.provided] } }

def versions = [
	('1.75')   : 'https://addons-origin.cursecdn.com/files/2269/339/ComputerCraft1.75.jar',
	('1.78')   : 'https://addons-origin.cursecdn.com/files/2275/878/ComputerCraft1.78.jar',
	('1.79')   : 'https://addons-origin.cursecdn.com/files/2291/384/ComputerCraft1.79.jar',
	('1.80pr0'): 'https://addons-origin.cursecdn.com/files/2311/39/ComputerCraft1.80pr0.jar',
]

task getVersions(type: Task) {
	versions.each { key, value ->
		def f = file('lib/ComputerCraft-' + key + '.jar')
		if (!f.exists()) {
			f.parentFile.mkdirs();

			new URL(value).withInputStream {
				i -> f.withOutputStream { it << i }
			}
		}
	}
}

compileTestJava.dependsOn getVersions

jar {
	// Package all luaj patches in luaj.luajc
	from(configurations.patch.collect { (it.isDirectory() ? it : zipTree(it)) })
		{
			include "org/luaj/**"
			include "org/squiddev/luaj/luajc/IGetPrototype.class"
		}

	// Package the patch files into a patch/ folder
	filesMatching("org/luaj/**", {
		it.path = "patch/" + it.path
	})
}
// Build a non-obfuscated jar
task combineJar(type: Jar) {
	from sourceSets.main.output

	// Package all the org.squiddev dependencies into one file
	from configurations.shade
		.collect { it.isDirectory() ? it : zipTree(it) }

	// Package all luaj patches in luaj.luajc.
	from(configurations.patch.collect { (it.isDirectory() ? it : zipTree(it)) })
		{
			include "org/luaj/**"
			include "org/squiddev/luaj/luajc/IGetPrototype.class"
		}

	// Package the patch files into a patch/ folder
	filesMatching("org/luaj/**", {
		it.path = "patch/" + it.path
	})

	classifier = 'complete'
}

assemble.dependsOn += combineJar

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
	publications = ['mavenJava']
	publish = true
	pkg {
		repo = 'maven'
		name = 'cctweaks-lua'
		licenses = ['MIT']
		vcsUrl = 'https://github.com/SquidDev-CC/CCTweaks-Lua'

		version {
			name = project.version
			desc = 'Standalone modifications to ComputerCraft'
			released = new Date()
		}
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourcesJar
		}
	}
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint"
	}

	tasks.withType(Jar) {
		exclude "**/*.java"
	}
}

test {
	testLogging {
		events "passed", "skipped", "failed", "standardOut", "standardError"
	}
}
